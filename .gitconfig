#
# Git configuration.
#
# Authors:
#   Andrew Tolmie
#

# Global Config

[init]
	defaultBranch = main

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true

[color]
	branch = always
	diff = always
	grep = always
	interactive = always
	pager = true
	showbranch = auto
	status = auto
	ui = always

[color "interactive"]
	error = red bold

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
	whitespace = white reverse

[color "status"]
	added = yellow
	changed = green
	untracked = cyan
	branch = magenta

[core]
	pager = less -FRSX
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol

[diff]
	tool = difftool

[difftool "difftool"]
	cmd = ~/bin/difftool $LOCAL $REMOTE
	trustExitCode = false
	
[difftool]
	prompt = false

[merge]
	tool = difftool

[mergetool "difftool"]
	cmd = ~/bin/difftool $BASE $LOCAL $REMOTE $MERGED
	keepBackup = false
	trustExitCode = false
	
[mergetool]
	prompt = false

[alias]
	# branch
	b  = branch
	bc = checkout -b
	bl = branch -v
	bL = branch -av
	bx = branch -d
	bX = branch -D
	bm = branch -m
	bM = branch -M
	bs = show-branch
	bS = show-branch -a

	# checkout/fetch/merge/push/rebase
	# checkout
	co  = checkout
	co0 = checkout HEAD --
	# fetch
	f   = fetch
	down = pull origin
	fo  = fetch origin
	# merge
	m   = merge
	mom = merge origin/master
	# push
	up = push origin
	upa  = push --all
	pt  = push --tags
	# rebase
	r   = rebase
	ra  = rebase --abort
	rc  = rebase --continue
	ri  = rebase --interactive
	rs  = rebase --skip
	rom = rebase origin/master	
	
	# clone
	sclone = clone --depth=1
	
	# commit
	in = commit --verbose
	ina = commit -a --verbose
	inm = commit --verbose -m
	inam = commit -a --verbose -m
	amend = commit --amend --verbose --reedit-message HEAD
	rename = commit --amend --verbose
	join = commit --amend -C HEAD
	joina = commit -a --amend -C HEAD
	undo  = reset --soft "HEAD^" # Undo your last commit, but don't throw away your changes
	undoh  = reset --hard "HEAD^" # Undo your last commit, and throw away your changes
	refresh = reset --hard HEAD # Throw away any changes
	cp	 = cherry-pick

	# diff
	d	= diff --color --color-words --abbrev				# Diff working dir to index
	ds	= diff --color --color-words --abbrev --staged	# Diff index to HEAD
	dh	= diff --color --color-words --abbrev HEAD		# Diff working dir and index to HEAD
	
	xd = difftool -t difftool
	xds = difftool -t difftool --staged
	xdh = difftool -t difftool HEAD
	
	# index
	s  = status -s
	a  ="!git add $@ && git status -s"
	ap = add -p
	ir = reset

	# log
	l   = log --topo-order --pretty=format:'%C(yellow)%h %C(cyan)%cn %C(blue)%cr%C(reset) %s'
	ls  = log --topo-order --stat --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
	ld  = log --topo-order --stat --patch --full-diff --pretty=format:'%C(bold)%C(yellow)Commit:%C(reset) %C(yellow)%H%C(red)%d%n%C(bold)%C(yellow)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)%C(yellow)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B'
	lg  = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	lga = log --topo-order --all --graph --pretty=format:'%C(yellow)%h %C(cyan)%cn%C(reset) %s %C(red)%d%C(reset)%n'
	lm  = log --topo-order --pretty=format:'%s'
	lh  = shortlog --summary --numbered
	llf = fsck --lost-found

	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''		  %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	
	# stash
  ss = stash                        # stash changes
  sl = stash list                   # list stashes
  sa = stash apply                  # apply stash (restore changes)
  sd = stash drop                   # drop stashes (destory changes)

  # subtree
  # the acronym stands for "subtree add"
  # git sba <repo uri> <dest folder> 
  sba = "!f() { git subtree add --prefix $2 $1 master --squash; }; f"
  # the acronym stands for "subtree update"
  # git sbu <repo uri> <dest folder> 
  sbu = "!f() { git subtree pull --prefix $2 $1 master --squash; }; f"

	# remote
	re  = remote
	rel = remote --verbose
	rea = remote add
	rex = remote rm
	rem = remote rename

  find = "!git log --reverse --color -p -S "

  whenadded = log --diff-filter=A

	# list aliases
	aliases = "!git config -l | grep alias | cut -c 7-"
	conflicts = diff --name-only --diff-filter=U
	fixup = !GIT_SEQUENCE_EDITOR=true git rebase -i --autosquash
	
		
[push]
	default = matching

# Use git and git+ssh instead of https
[url "git://github.com/"]
	insteadOf = https://github.com/
[url "git@github.com:"]
	pushInsteadOf = "git://github.com/"
[url "git@github.com:"]
	pushInsteadOf = "https://github.com/"

[include]
	path = .gitconfig.private
	path = .gitconfig.local
[rebase]
	autoStash = true
